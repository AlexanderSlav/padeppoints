upstream fastapi_backend {
    server 127.0.0.1:8000;
}

# --- HTTP: redirect to HTTPS ---
server {
    listen 80;
    listen [::]:80;
    server_name api.tornetic.com;

    return 301 https://$host$request_uri;
}

# Map for websocket upgrade (putting it here is fine for a small setup)
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# --- HTTPS ---
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.tornetic.com;

    # Certbot will place the real paths after issuance
    ssl_certificate     /etc/letsencrypt/live/api.tornetic.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.tornetic.com/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # --- CORS (adjust as needed) ---
    set $cors_origin "";
    if ($http_origin ~* ^https://(tornetic\.com|www\.tornetic\.com|app\.tornetic\.com)$) {
        set $cors_origin $http_origin;
    }
    add_header Access-Control-Allow-Origin $cors_origin always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
    add_header Access-Control-Allow-Credentials "true" always;

    # Preflight
    location / {
        if ($request_method = OPTIONS) {
            return 204;
        }

        proxy_pass http://fastapi_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health (optional)
    location = /health {
        proxy_pass http://fastapi_backend/health;
        access_log off;
    }

    # Logs
    access_log /var/log/nginx/padel-api-access.log;
    error_log  /var/log/nginx/padel-api-error.log;
}

